# This references the default Ruby container from
# the Docker Hub.
# https://registry.hub.docker.com/_/ruby/
# If you want to use a specific version you would use a tag:
# ruby:2.2.2
box: ruby:2.2.4
# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
services:
    - id: postgres
      env:
        POSTGRES_PASSWORD: itssosecreticantbelieveit!!1!1
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongodb
    # http://devcenter.wercker.com/docs/services/mongodb.html

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
build:
    # Steps make up the actions in your pipeline
    # Read more about steps on our dev center:
    # http://devcenter.wercker.com/docs/steps/index.html
    steps:
        - script:
            name: Install PhantomJS
            code: |
              VERSION=2.1.1 &&
              # NOTE: Does not check for legacy version
              if ! which phantomjs; then
                INSTALL_DIR=/usr/local/share &&
                # cdn_url=http://cnpmjs.org/downloads &&
                cdn_url=https://github.com/Medium/phantomjs/releases/download/v2.1.1 &&
                PHANTOM_JS=phantomjs-$VERSION-linux-x86_64 &&
                PHANTOM_JS_ZIP=$PHANTOM_JS.tar.bz2 &&
                cd $INSTALL_DIR &&
                curl --remote-name --location -- ${cdn_url}/$PHANTOM_JS_ZIP &&
                tar xjf $PHANTOM_JS_ZIP &&
                ln -s $INSTALL_DIR/$PHANTOM_JS/bin/phantomjs /usr/local/bin/phantomjs
              fi
        - script:
            name: Install vendor binaries
            code: |
              # This code lifted from https://github.com/peterkeen/heroku-buildpack-vendorbinaries/blob/master/bin/compile
              if [ ! -s $1/.vendor_urls ]; then
                echo ".vendor_urls empty. Skipping." | indent
                exit 0
              fi

              cd $1

              while read url; do
                if [ -n "$url" ]; then # incase ensure_newline_at_eof_on_save is enabled
                  echo Vendoring $url | indent

                  extension="${url##*.}" # http://stackoverflow.com/q/965053
                  flag="-z" # by default use gz
                  if [ "$extension" == "xz" ]; then flag="--xz"
                  elif [ "$extension" == "bz2" ]; then flag="--bzip2"
                  elif [ "$extension" == "tar" ]; then flag=""  # no compression
                  fi

                  curl -L --silent $url | tar x $flag
                fi
              done < .vendor_urls

              # And finally, source the .profile.d scripts
              for script in .profile.d/*; do source $script; done
        - script:
            name: Bundle config
            code: |
              # Workaround for Nokogiri build failure,
              # see: https://github.com/sparklemotion/nokogiri/issues/1370
              bundle config build.nokogiri --use-system-libraries
        - bundle-install
        - rails-database-yml
        - script:
            name: Set up db
            code: bundle exec rake db:schema:load RAILS_ENV=test
        - script:
            name: test
            code: bundle exec rake test
